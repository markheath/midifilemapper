//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1378
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MarkHeath.MidiUtils.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MarkHeath.MidiUtils.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 5 of 5: Convert Files.
        /// </summary>
        internal static string ConvertFilesPageHeading {
            get {
                return ResourceManager.GetString("ConvertFilesPageHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create new MIDI files mapped according to the settings you have chosen..
        /// </summary>
        internal static string ConvertFilesPageInstructions {
            get {
                return ResourceManager.GetString("ConvertFilesPageInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Close.
        /// </summary>
        internal static string FinishButtonText {
            get {
                return ResourceManager.GetString("FinishButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Next &gt;.
        /// </summary>
        internal static string NextButtonText {
            get {
                return ResourceManager.GetString("NextButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 4 of 5: Select Output File Options.
        /// </summary>
        internal static string OptionsPageHeading {
            get {
                return ResourceManager.GetString("OptionsPageHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the location and type of the MIDI output files to  be created..
        /// </summary>
        internal static string OptionsPageInstructions {
            get {
                return ResourceManager.GetString("OptionsPageInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt; &amp;Back.
        /// </summary>
        internal static string PreviousButtonText {
            get {
                return ResourceManager.GetString("PreviousButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 2 of 5: Select Input Files.
        /// </summary>
        internal static string SelectFilesPageHeading {
            get {
                return ResourceManager.GetString("SelectFilesPageHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the input MIDI files you wish to remap and the output folder to put them in..
        /// </summary>
        internal static string SelectFilesPageInstructions {
            get {
                return ResourceManager.GetString("SelectFilesPageInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 2 of 5: Select Input Folder.
        /// </summary>
        internal static string SelectFolderPageHeading {
            get {
                return ResourceManager.GetString("SelectFolderPageHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the folder containing the files you wish to convert..
        /// </summary>
        internal static string SelectFolderPageInstructions {
            get {
                return ResourceManager.GetString("SelectFolderPageInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 3 of 5: Select Mapping Rules.
        /// </summary>
        internal static string SelectMappingPageHeading {
            get {
                return ResourceManager.GetString("SelectMappingPageHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the remapping rules you wish to apply..
        /// </summary>
        internal static string SelectMappingPageInstructions {
            get {
                return ResourceManager.GetString("SelectMappingPageInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 1 of 5: Select Input File Source.
        /// </summary>
        internal static string WelcomePageHeading {
            get {
                return ResourceManager.GetString("WelcomePageHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose how you will specify the files to be converted.
        /// </summary>
        internal static string WelcomePageInstructions {
            get {
                return ResourceManager.GetString("WelcomePageInstructions", resourceCulture);
            }
        }
    }
}
